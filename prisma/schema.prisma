// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum STATE {
  VISIBLE
  PRIVATE
  PUBLIC
  ARCHIVED
}

model User {
  id String @id @default(uuid())

  name              String
  email             String  @unique
  password          String
  profilePictureUrl String?

  items   Item[]
  recipes Recipe[]

  likedRecipes UsersOnLikedRecipes[]
}

model Item {
  id String @id @default(uuid())

  name       String
  baseAmount Float
  amountKind String
  price      Float

  state STATE @default(VISIBLE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  recipes ItemsOnRecipes[]

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model ItemsOnRecipes {
  id String @id @default(uuid())

  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId String

  item   Item   @relation(fields: [itemId], references: [id])
  itemId String

  amount Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Recipe {
  id String @id @default(uuid())

  name  String
  state STATE  @default(VISIBLE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  items ItemsOnRecipes[]

  user   User   @relation(fields: [userId], references: [id])
  userId String

  likedByUsers UsersOnLikedRecipes[]
}

model UsersOnLikedRecipes {
  userId String
  user   User   @relation(fields: [userId], references: [id])

  recipeId String
  recipe   Recipe @relation(fields: [recipeId], references: [id])

  @@id([userId, recipeId])
}
